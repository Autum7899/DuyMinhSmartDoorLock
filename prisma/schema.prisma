generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id          Int        @id @default(autoincrement())
  name        String     @unique @db.VarChar(100)
  description String?
  products    products[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model order_items {
  id                Int      @id @default(autoincrement())
  order_id          Int
  product_id        Int
  quantity          Int
  price_at_purchase Decimal  @db.Decimal(12, 2)
  orders            orders   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_order")
  products          products @relation(fields: [product_id], references: [id], onUpdate: NoAction, map: "fk_product")

  @@index([order_id])
  @@index([product_id])
}

model orders {
  id            Int           @id @default(autoincrement())
  customer_name String        @db.VarChar(100)
  phone_number  String        @db.VarChar(20)
  address       String
  note          String?
  total_amount  Decimal       @db.Decimal(12, 2)
  status        order_status  @default(NEW)
  created_at    DateTime      @default(now()) @db.Timestamptz(6)
  order_items   order_items[]
}

model products {
  id                        Int           @id @default(autoincrement())
  name                      String        @db.VarChar(255)
  image_url                 String
  description               String?
  features                  Json?
  price_agency              Decimal?      @default(0) @db.Decimal(12, 2)
  price_retail              Decimal?      @default(0) @db.Decimal(12, 2)
  price_retail_with_install Decimal       @db.Decimal(12, 2)
  quantity                  Int           @default(0)
  category_id               Int?
  created_at                DateTime      @default(now()) @db.Timestamptz(6)
  updated_at                DateTime      @default(now()) @db.Timestamptz(6)
  order_items               order_items[]
  categories                categories?   @relation(fields: [category_id], references: [id], onUpdate: NoAction, map: "fk_category")

  @@index([category_id])
}

enum order_status {
  NEW
  CONFIRMED
  FINISHED
  CANCELLED
}
